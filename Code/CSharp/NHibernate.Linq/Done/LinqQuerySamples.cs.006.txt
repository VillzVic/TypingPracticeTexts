		public void DLinq13()
		{
			var q =
				from p in db.Products
				select new { p.ProductName, Availability = p.UnitsInStock - p.UnitsOnOrder < 0 ? "Out Of Stock" : "In Stock" };

			ObjectDumper.Write(q, 1);
		}

		[Category("SELECT/DISTINCT")]
		[Test(Description = "This sample uses SELECT and a known type to return a sequence of employees' names.")]
		public void DLinq14()
		{
			var q =
				from e in db.Employees
				select new Name { FirstName = e.FirstName, LastName = e.LastName };

			ObjectDumper.Write(q, 1);
		}

		[Category("SELECT/DISTINCT")]
		[Test(Description = "This sample uses SELECT and WHERE to return a sequence of " +
					 "just the London Customers' contact names.")]
		public void DLinq15()
		{
			var q =
				from c in db.Customers
				where c.City == "London"
				select c.ContactName;

			ObjectDumper.Write(q);
		}

		[Category("SELECT/DISTINCT")]
		[Test(Description = "This sample uses SELECT and anonymous types to return " +
					 "a shaped subset of the data about Customers.")]
		public void DLinq16()
		{
			var q =
				from c in db.Customers
				select new
						{
							c.CustomerID,
							CompanyInfo = new { c.CompanyName, c.City, c.Country },
							ContactInfo = new { c.ContactName, c.ContactTitle }
						};

			ObjectDumper.Write(q, 1);
		}
