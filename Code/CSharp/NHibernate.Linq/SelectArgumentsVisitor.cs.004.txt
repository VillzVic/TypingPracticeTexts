			NewExpression newExpr = base.VisitNew(expr);
			_transformer = new TypeSafeConstructorMemberInitResultTransformer(expr);

			var aggregators = expr.Arguments.Where(arg => arg is MethodCallExpression && SupportsMethod(((MethodCallExpression)arg).Method.Name));
			if (aggregators.Any())
			{
				foreach (var exp in expr.Arguments.Except(aggregators))
				{
					string propertyName = MemberNameVisitor.GetMemberName(_rootCriteria, exp);
					if (!String.IsNullOrEmpty(propertyName))
					{
						_projections.Add(NHProjections.GroupProperty(propertyName));
					}
				}
			}

			return newExpr;
		}

		protected override Expression VisitMemberInit(MemberInitExpression expr)
		{
			Expression newExpr = base.VisitMemberInit(expr);
			_transformer = new TypeSafeConstructorMemberInitResultTransformer(expr);
			return newExpr;
		}

		protected override Expression VisitConditional(ConditionalExpression expr)
		{
			var visitorTrue = new SelectArgumentsVisitor(_rootCriteria, _session);
			visitorTrue.Visit(expr.IfTrue);

			var visitorFalse = new SelectArgumentsVisitor(_rootCriteria, _session);
			visitorFalse.Visit(expr.IfFalse);

			var visitorCondition = new WhereArgumentsVisitor(_rootCriteria, _session);
			visitorCondition.Visit(expr.Test);
			Conjunction conjunction = NHibernate.Criterion.Expression.Conjunction();
			foreach (var criterion in visitorCondition.CurrentCriterions)
			{
				conjunction.Add(criterion);
			}

			_projections.Add(
				NHibernate.Criterion.Projections
					.Conditional(conjunction,
						visitorTrue.Projection,
						visitorFalse.Projection)
						);

			return expr;
