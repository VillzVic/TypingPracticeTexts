        if ( onlyHandlers || !elem ) {
            event.preventDefault();
            event.stopPropagation();
        }

        // Handle a global trigger
        if ( !elem ) {
            // TODO: Stop taunting the data cache; remove global events and always attach to document
            jQuery.each( jQuery.cache, function() {
                // internalKey variable is just used to make it easier to find
                // and potentially change this stuff later; currently it just
                // points to jQuery.expando
                var internalKey = jQuery.expando,
                    internalCache = this[ internalKey ];
                if ( internalCache && internalCache.events && internalCache.events[ type ] ) {
                    jQuery.event.trigger( event, data, internalCache.handle.elem );
                }
            });
            return;
        }

        // Don't do events on text and comment nodes
        if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
            return;
        }

        // Clean up the event in case it is being reused
        event.result = undefined;
        event.target = elem;

        // Clone any incoming data and prepend the event, creating the handler arg list
        data = data != null ? jQuery.makeArray( data ) : [];
        data.unshift( event );

        var cur = elem,
            // IE doesn't like method names with a colon (#3533, #8272)
            ontype = type.indexOf(":") < 0 ? "on" + type : "";

        // Fire event on the current element, then bubble up the DOM tree
        do {
            var handle = jQuery._data( cur, "handle" );

            event.currentTarget = cur;
